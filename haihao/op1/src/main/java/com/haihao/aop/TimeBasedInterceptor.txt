package com.haihao.aop;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import com.alibaba.fastjson.JSON;
import com.haihao.utils.IPUtils;
import com.haihao.utils.UrlMatchUtils;

public class TimeBasedInterceptor extends HandlerInterceptorAdapter {
	
	private static ThreadLocal<Long> TIMER_LOCAL = new ThreadLocal<Long>();
	
	private static final Logger logger = LoggerFactory.getLogger("TimeBasedInterceptor");

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
		
		TIMER_LOCAL.set(System.nanoTime());
		String url = UrlMatchUtils.getServletUrl(request);

		String clientIP = IPUtils.getRequestIp(request);
		
		String userAgent = request.getHeader("User-Agent");
		logger.info("----- 开始请求：URL={},参数={}, 客户端IP={}, UserAgent={} -----", new Object[] {
				url,JSON.toJSONString(request.getParameterMap()),
				null == clientIP? IPUtils.getRequestIp(request) : clientIP,
				userAgent
		});
		
		
		
		return true;
	}

	@Override
	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {
		Long startTime = TIMER_LOCAL.get();
		TIMER_LOCAL.remove();
		
		String clientIP = IPUtils.getRequestIp(request);
		Long spendTimeInMillis = (System.nanoTime() - (null == startTime? System.nanoTime() : startTime.longValue())) / 1000000L;
		
		logger.info("----- 完成请求: URL={}, 耗时(毫秒)={}, 客户端IP={} -----", new Object[] {
				UrlMatchUtils.getServletUrl(request),
				spendTimeInMillis,
				null == clientIP? IPUtils.getRequestIp(request) : clientIP
		});
	}

}

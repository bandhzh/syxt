package com.haihao.utils;

import javax.servlet.http.HttpServletRequest;

import org.springframework.util.AntPathMatcher;
import org.springframework.util.PathMatcher;
import org.springframework.web.util.UrlPathHelper;

public abstract class UrlMatchUtils {

	private static PathMatcher PATH_MATCHER = new AntPathMatcher();

	private static UrlPathHelper URL_PATHHELPER = new UrlPathHelper();

	public static boolean isMatch(String pattern, String url) {
		return PATH_MATCHER.match(pattern, url);
	}

	public static String getServletUrl(HttpServletRequest request) {
		return URL_PATHHELPER.getServletPath(request);
	}

	public static String getContextUrl(HttpServletRequest request) {
		return URL_PATHHELPER.getContextPath(request);
	}
	
	 /**
		 * @param request
		 * @return 应用程序的访问地址（不含端口号，因为发布后要使用80端口，即不用指定），如 http://localhost/crm/
		 */
	public static String getBaseAccessUrlWithoutPort(HttpServletRequest request) {
		String path = request.getContextPath();
		// FIXME 把应用放到ROOT下时，path是否为'/'?!
		// 如果是，就应如下：
		if ("/".equals(path)) {
			path = ""; // 就忽略他
		}
		// FIXME 不加path了，是同一网站就行。   
		String basePath = request.getScheme() + "://" + request.getServerName(); // + path + "/";
		return basePath;
	}
	
	 /**
		 * @param request
		 * @return 应用程序的访问地址（不含端口号，因为发布后要使用80端口，即不用指定），如 http://localhost/crm/
		 */
	public static String getBaseAccessUrl(HttpServletRequest request) {
		String path = request.getContextPath();
		// FIXME 把应用放到ROOT下时，path是否为'/'?!
		// 如果是，就应如下：
		if ("/".equals(path)) {
			path = ""; // 就忽略他
		}
		// FIXME 不加path了，是同一网站就行。   
		String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort(); // + path + "/";
		return basePath;
	}
}
